<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton open source conferencing system - http://www.bigbluebutton.org
  
  Copyright (c) 2010 BigBlueButton Inc. and by respective authors (see below).
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 2.1 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
-->

<!--
Notes.mxml is the main view of the SharedNotes application
-->
<MDIWindow xmlns="flexlib.mdi.containers.*" xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="200" height="300" 
	xmlns:mate="http://mate.asfusion.com/" 
	implements="org.bigbluebutton.common.IBbbModuleWindow" 
	creationComplete="onCreationComplete()"
	label="Polling" layout="absolute" 
	title="Polling">
	
	<mx:Script>
		<![CDATA[
		import flexlib.mdi.events.MDIWindowEvent;
			
			import org.bigbluebutton.main.views.MainCanvas;
			import mx.controls.Alert;
			import org.bigbluebutton.common.LogUtil;	 
			import org.bigbluebutton.modules.polling.events.CloseInstructionsEvent;
			import org.bigbluebutton.modules.polling.events.StartPollingEvent;
			import org.bigbluebutton.common.IBbbModuleWindow;
           
            import org.bigbluebutton.modules.polling.managers.ViewerWindowManager;
		   public static const LOGNAME:String = "[PollingViewWindow] ";
	

			public var moduleAttributes:Object;
			private var userName:String;
			private var _userrole:String;
			private var _userid:Number;
			private var ns:NetStream;
			private var stream:String;
			private var window:PollingViewWindow;
			private var manager:ViewerWindowManager;
			
			public function getPrefferedPosition():String{
				return MainCanvas.POPUP;
			}
			
			private function isPresenter():Boolean{
				if (this._userrole == "MODERATOR" || this._userrole == "PRESENTER") return true;
				else return false;
			}
			
			public function set userrole(role:String):void{
				this._userrole = role;
			}
			
 
			private function onCreationComplete():void{
				LogUtil.debug(LOGNAME + " Inside Creation Complete");
				
				userName = moduleAttributes.username;
			}
			
			public function onButtonClick():void{
				LogUtil.debug(LOGNAME + " button clicked");
			}
			
			
			
			
			public function startPolling(nc:NetConnection, stream:String):void{
				LogUtil.debug(LOGNAME + " inside start polling");
				
				ns = new NetStream(nc);
				LogUtil.debug(LOGNAME+ "initliazed NetStream with New connection ns: " +ns);
				
				ns.addEventListener( NetStatusEvent.NET_STATUS, onNetStatus );
				ns.addEventListener(AsyncErrorEvent.ASYNC_ERROR, onAsyncError);
				ns.client = this;
				ns.publish(stream);	
				this.stream = stream;
				this.title = "Polling  INVOKED FROM STREAM";
				
				
				
			}
			
			
			private function onNetStatus(e:NetStatusEvent):void{
				switch(e.info.code){
				case "NetStream.Publish.Start":
					LogUtil.debug(LOGNAME + " Listener :: Publishing Started for broadcast stream " + stream);
					break;
				case "NetStream.Play.UnpublishNotify":
					LogUtil.debug(LOGNAME + "Listener :: NetStream.Play.UnpublishNotify for broadcast stream " + stream);
					break;
				case "NetStream.Play.Start":
					LogUtil.debug(LOGNAME + "Listener :: Netstatus: " + e.info.code);
				}
			}
			
				private function onAsyncError(event:AsyncErrorEvent):void
		{
			LogUtil.debug(LOGNAME + "pollingSO asynchronous error.");
		}
			
			//Event Listeners
			
			
		]]>
	</mx:Script>
	
	<!-- Prorotype of Polling Module Design -->
        <mx:VBox width="100%" height="90%" horizontalAlign="center" >
          
               <mx:Label width="100%" 
               		paddingTop="30" paddingBottom="10" 
               		fontWeight="bold" textAlign="center"
                    text="Which card do you use ?" />

             	
          
        			<mx:RadioButton groupName="options" 
       						 id="americanExpress"
        					label="American Express" 
        					width="150"
                   							 />
    				<mx:RadioButton groupName="options" 
        					id="masterCard"
        					label="MasterCard" 
        					width="150"		/>
        					
    				<mx:RadioButton groupName="options" 
        				   id="visa"
        				   label="Visa" 
        			       width="150"
        			       left="40" />
        	
       </mx:VBox>
       <mx:ControlBar width="100%" horizontalAlign="center">
       <mx:Button id="btnAcceptPoll" label="Vote" click="onButtonClick()"  width="100" height="30"/>
		 
		</mx:ControlBar> 	 
       
       
	
		
	





</MDIWindow>
