<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton open source conferencing system - http://www.bigbluebutton.org
  
  Copyright (c) 2010 BigBlueButton Inc. and by respective authors (see below).
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 2.1 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
-->

<MDIWindow xmlns="flexlib.mdi.containers.*" xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="200" height="300" 
	xmlns:mate="http://mate.asfusion.com/" 
	implements="org.bigbluebutton.common.IBbbModuleWindow" 
	creationComplete="onCreationComplete()"
	label="Polling" layout="absolute" 
	title="Polling">
	
	<mx:Script>
		<![CDATA[
		import flexlib.mdi.events.MDIWindowEvent;
			
			import org.bigbluebutton.main.views.MainCanvas;
			import mx.controls.Alert;
			import org.bigbluebutton.common.LogUtil;	 
			import org.bigbluebutton.modules.polling.events.StartPollingEvent;
			import org.bigbluebutton.modules.polling.events.PollingViewWindowEvent;
			import org.bigbluebutton.modules.polling.managers.PollingManager;

			import mx.validators.Validator;	
			import mx.utils.ObjectUtil;



			
			import mx.collections.ArrayCollection;
			import mx.core.IUIComponent;
			import mx.controls.CheckBox;
			import mx.controls.RadioButton;
			import mx.controls.Text;
		    import mx.containers.*;
		    import mx.controls.*;

			
			



		   public static const LOGNAME:String = "[PollingViewWindow] ";
	
			
			public var isMultiple:Boolean;
			[Bindable] public var question:String;
			[Bindable] public var answers:Array;
			public var votes:Array;
			public var time:String;
			
			public var moduleAttributes:Object;
			private var _userid:Number; 
			private var window:PollingViewWindow;

			
			public function getPrefferedPosition():String{
				return MainCanvas.POPUP;
			}
				
			
			private function Vote():void{
				closeWindow();
				
			}
			private function closeWindow():void{
				LogUtil.debug(LOGNAME + "inside closeWindow()");
				dispatchEvent(new PollingViewWindowEvent(PollingViewWindowEvent.CLOSE));
			}
 
 
			private function onCreationComplete():void{
				LogUtil.debug(LOGNAME + " Inside Creation Complete");
				LogUtil.debug(LOGNAME + " Inside Creation Complete Answers : " +answers);
				 createButtons(answers.length,answers);
				 			invalidateDisplayList();
							validateNow(); 
			}
			
			
			// This function will receive information and generate radiobuttons on fly
			
			
			// function receives Array.length and ArrayCollection
		private function createButtons(amount:uint, content:Array):void{
		
			LogUtil.debug(LOGNAME+" here are answers:" + content+ " Amount of answers is : " +amount);
			 var _cb:CheckBox;
			 var _rb:RadioButton;
			 var _tx: Text;
			 var _hb: HBox; 
			
			 // creating buttons one by one
			 LogUtil.debug(LOGNAME+" buttons creation Step1");
			   for (var i:int = 0; i < amount; i++) {
					
				_tx = new Text();
				_hb = new HBox();
				LogUtil.debug(LOGNAME+" Box is "+ _hb);
				_tx.name = "option" +i;
				_tx.width = 200;
				 // assigning array element to text field
				 LogUtil.debug(LOGNAME+" Once again content is " + content+ " 'i' is  : " + i + "and contet[i] is "+ content[i]);
				 
				 _tx.text =content[i].toString(); 
				 
				 LogUtil.debug(LOGNAME+" Tx Text is " + _tx.text);
				 
				 //LogUtil.debug(LOGNAME+" answerBox is "+ answerBox);
				 answerBox.addChild(_hb);
				 //this.addChild(_hb);
				 LogUtil.debug(LOGNAME+" buttons creation Step1 and a half");
				 // if global var isMultiple is true it means user wants checkboxes, 
				 //otherwise radiobutton (if multiple choices are allowed)
					if(isMultiple){
				
				 	   _cb= new CheckBox();
				 	   // giving button a name of array elelment to process it easier later
				    	   _cb.name=content[i].toString(); 
				    	    // gap between the buttons
 				    	   _cb.y=i*20;
 				    	   // adding buttons to the Horizontal Box
 				    	   _hb.addChild(_cb); 
 				    
				 		 }else{
				  				 LogUtil.debug(LOGNAME+" buttons creation Step2");
				 	     	    _rb = new RadioButton();
				 	              _rb.name = content[i].toString(); // giving button a name of array elelment to process it easier later
				 	              _rb.groupName = "answers";
				 	              _rb.label ="*";	
				 	              _hb.addChild(_rb);
				     
				     				 LogUtil.debug(LOGNAME+" buttons creation Step3");
				 		 }    
				 		_hb.addChild(_tx); // adding text near button
				 			 LogUtil.debug(LOGNAME+" buttons creation Step4 text is:"+ _tx);
				 
    			   		
				 } // end of loop
		
			} // end of function
			
			
		]]>
	</mx:Script>
	
	<!-- Prototype of Polling Module Design -->
        <mx:VBox width="100%" height="90%" horizontalAlign="center" paddingLeft="10" >
          
               <mx:Label width="100%" 
               		paddingTop="30" paddingBottom="10" 
               		fontWeight="bold" textAlign="center"
                    text="{question}"/>

             	
          
        		<mx:Box id="answerBox" width="90%" height="90%" >
          		</mx:Box>
          	
        	
       </mx:VBox>
       <mx:ControlBar width="100%" horizontalAlign="center">
       <mx:Button id="btnAcceptPoll" label="Vote" click="Vote()"  width="100" height="30"/>
       </mx:ControlBar> 	 
       
       
	
		
	





</MDIWindow>
